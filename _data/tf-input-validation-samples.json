[
    {
        "comment": "Validation to check for a fixed  length string, typically used for API tokens and secrets",
        "name": "api_token",
        "type": "string",
        "default": "",
        "description": "Please enter a valid API Token",
        "condition": [
            "length(var.api_token) == 32"
        ],
        "error_message": "The input value (api_token) must be exactly 32 character(s).",
        "provider": "generic",
        "category": "String Validation",
        "sensitive_text": true
    },
    {
        "comment": "Validation to check for a valid Amazon Machine Image (AMI) ID",
        "name": "ami_id",
        "type": "string",
        "default": "",
        "description": "Please enter a valid Amazon Machine Image (AMI) ID",
        "condition": [
            "length(var.ami_id) > 4 && substr(var.ami_id, 0, 4) == \"ami-\""
        ],
        "error_message": "The Amazon Machine Image ID (ami_id) value must start with the prefix \\\"ami-\\\".",
        "provider": "aws",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid IP address",
        "name": "ip_address",
        "type": "string",
        "default": "",
        "description": "Please enter a valid IP address",
        "condition": [
            "can(regex(\"^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\", var.ip_address))"
        ],
        "error_message": "The input value (ip_address) was not a valid IP address. Please enter a valid IP address. For example, 0.0.0.0.",
        "provider": "generic",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a list of valid IP addresses",
        "name": "ip_address_list",
        "type": "string",
        "default": [],
        "description": "Please enter a list of valid IP addresses",
        "condition": [
            "can([for ip in var.ip_address_list : regex(\"^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\", ip)])"
        ],
        "error_message": "The input value (ip_address_list) was not a list of valid IP addresses. Please enter a valid list of IP addresses. For example, [10.0.0.1, 172.16.0.1, 192.168.0.1].",
        "provider": "generic",
        "category": "List Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid timestamp",
        "name": "epoch_timestamp",
        "type": "string",
        "default": "",
        "description": "Please enter a valid timestamp",
        "condition": [
            "can(formatdate(\"\", var.epoch_timestamp))"
        ],
        "error_message": "The input value (epoch_timestamp) was not a valid timestamp. Please enter a valid RFC3339 timestamp.",
        "provider": "generic",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid Azure Storage Account name",
        "name": "storage_account_name",
        "type": "string",
        "default": "",
        "description": "Please enter a valid and globally unique name for the new Azure Storage Account",
        "condition": [
            "length(var.storage_account_name) >= 3 && length(var.storage_account_name) <= 24"
        ],
        "error_message": "The input value was not a valid Azure Storage Account name. The storage_account_name variable name must be 3-24 characters in length. Please enter a valid Azure Storage Account name.",
        "provider": "azurerm",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid Azure Storage Account name with a prefix",
        "name": "storage_account_name_w_prefix",
        "type": "string",
        "default": "",
        "description": "Please enter a valid and globally unique name for the new Azure Storage Account with the \\\"azsa\\\" prefix",
        "condition": [
            "length(var.storage_account_name_w_prefix) >= 3 && length(var.storage_account_name_w_prefix) <= 24",
            "can(regex(\"^azsa\", var.storage_account_name_w_prefix))"
        ],
        "error_message": "The Azure Storage Account name with a prefix (storage_account_name_w_prefix) was not a valid Azure Storage Account name with the \\\"azsa-\\\" prefix. The storage_account_name_w_prefix must also be 3-24 characters in length. Please enter a valid Azure Storage Account name with the \\\"azsa-\\\".",
        "provider": "azurerm",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid Azure Storage Access Tier",
        "name": "storage_access_tier",
        "type": "string",
        "default": "",
        "description": "Storage Access Tier for a storage account must be \\\"Hot\\\" or \\\"Cool\\\".Please enter a valid Azure Storage Access Tier",
        "condition": [
            "contains([\"Hot\", \"Cool\"], var.storage_access_tier)"
        ],
        "error_message": "The Storage Access Tier (storage_access_tier) for the Azure Storage Account must either be set to \\\"Hot\\\" or \\\"Cool\\\".",
        "provider": "azurerm",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid Azure Container Registry SKU",
        "name": "container_registry_sku",
        "type": "string",
        "default": "",
        "description": "Azure Container Registry SKU must either be \\\"Standard\\\" or \\\"Premium\\\". Please enter a valid Azure Container Registry SKU.",
        "condition": [
            "contains([\"Standard\", \"Premium\"], var.container_registry_sku)"
        ],
        "error_message": "The Azure Container Registry SKU (container_registry_sku) must either be set to \\\"Standard\\\" or \\\"Premium\\\".",
        "provider": "azurerm",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid Amazon Virtual Private Cloud (VPC) ID",
        "name": "vpc_id",
        "type": "string",
        "default": "",
        "description": "Please enter a valid Amazon Virtual Private Cloud (VPC) ID",
        "condition": [
            "length(var.vpc_id) > 4 && substr(var.vpc_id, 0, 4) == \"vpc-\""
        ],
        "error_message": "The Amazon Virtual Private Cloud (VPC) ID (vpc_id) value must start with the prefix \\\"vpc-\\\".",
        "provider": "aws",
        "category": "String Validation",
        "sensitive_text": false
    },
    {
        "comment": "Validation to check for a valid list of CNAME aliases",
        "name": "cname_aliases",
        "type": "list(string)",
        "default": [],
        "description": "Please enter a valid list of CNAME aliases",
        "condition": [
            "alltrue([for cname_alias in var.cname_aliases : can(regex(\"^[.0-9a-z-]+$\", cname_alias))"
        ],
        "error_message": "The list of CNAME aliases (cname_aliases) value is invalid.",
        "provider": "aws",
        "category": "String Validation",
        "sensitive_text": false
    }
]